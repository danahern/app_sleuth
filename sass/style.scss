//
// HTML5 âœ° Boilerplate (SCSS Edition)
//
// What follows is the result of much research on cross-browser styling.
// Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
// Kroc Camen, and the H5BP dev community and team.
//
// Detailed information about this CSS: h5bp.com/css
//

@import "mixins/mixins";
@import "marcotte-grid";
@import "normalize"; 
@import "boilerplate";

$black: #000;
$white: #fff;
$gray: #a29f99;
$grayLight: tint($gray, 20%);
$grayLighter: tint($gray, 50%);
$grayLightest: tint($gray, 90%);
$grayDark: shade($gray, 20%);
$grayDarker: shade($gray, 50%);
$grayDarkest: shade($gray, 80%);

// ==|== primary styles =====================================================
//   Author: Lynn Wallenstein
// =======================================================================


// Base

html {
  body {
    background: #666;
    header#page-header {
    } //header#page-header
    div#main {
      a#light-switch {
        float: right;
        margin: 20px;
      }
      ul#swatches {
        padding: 100px 0 0 0;
        li.swatch {
          @include border-radius(15px);
          @include box-shadow(2px 2px 2px hsla(0,0,0,.5));
          @include transition(transform .15s linear);
          border-left: 20px solid #fff;
          border-right: 20px solid #000;
          float: left;
          list-style: none;
          height: 100px;
          padding-top: 40px;
          position: relative;
          margin: 20px;
          text-align: center;
          width: 130px;
          z-index: 100;
          &:hover {
            @include transform(scale(2));
            z-index: 9999 !important;
            span.help {
              display: block;
              font-size: 6px;
              opacity: .5;
              padding-top: 5px;
            }
          }
          &:before {
            content: attr(data-hex);
          }
          &.light-switch {
            color: #fff;
            .close {
              color: #fff !important;
            }
          }
          .close {
            @include opacity(20);
            color: #666 !important;
            float: right;
            font-size: 20px;
            font-weight: bold;
            line-height: 18px;
            position: absolute;
            right: 5px;
            text-decoration: none;
            text-shadow: 1px 1px 0 hsla(0,0,0,.9);
            top: 5px;
            &:hover {
              @include opacity(40);
              color: #000;
              cursor: pointer;
              text-decoration: none;
            }
          } // .close
          span.help {
            display: none;
          }
        } // li.swatch
      }
    } // div#main
    footer#page-footer {
    } // footer#page-footer
  } // body
} // html



// ------------------------------------------------------------------ 
//  Mixin for generating button backgrounds
// ------------------------------------------------------------------ 

@mixin buttonBackground($startColor, $endColor) {
  // gradientBar will set the background to a pleasing blend of these, to support IE<=9
  @include gradientBar($startColor, $endColor);
  @include reset-filter();

  // in these cases the gradient won't cover the background, so we override
  &:hover, &:active, &.active {
    background-color: $endColor;
  }

  &.disabled, &[disabled]  {
    &:hover {
      @include gradientBar($startColor, $endColor);
      @include reset-filter();
    }
  }

  // IE 7 + 8 can't handle box-shadow to show active, so we darken a bit ourselves
  &:active,
  &.active {
    background-color: darken($endColor, 10%) #{"\9"};
    @include gradientBar($endColor, $startColor);
  }
}

// ------------------------------------------------------------------ 
//  Base Styles
// ------------------------------------------------------------------ 

button,  input[type="button"], input[type="submit"], input[type="reset"], .btn {
  display: inline-block;
  padding: 4px 10px 4px;
  font-size: 13px;
  line-height: 18px;
  color: $grayDarker !important;
  text-align: center;
  text-decoration: none !important;
  text-shadow: 0 1px 1px rgba(255,255,255,.75);
  @include gradient-vertical-three-colors($white, $white, 25%, darken($white, 10%)); // Don't use .gradientbar() here since it does a three-color gradient
  border: 1px solid $grayLighter;
  border-bottom-color: $grayLight;
  @include border-radius(4px);
  $shadow: inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);
  @include box-shadow($shadow);
  cursor: pointer;

  // Give IE7 some love
  @include ie7-restore-left-whitespace();

  // Hover state
  &:hover {
    @include transition(background-position .1s linear);
    color: $grayDarker;
    text-decoration: none;
    background-color: darken($white, 10%);
    background-position: 0 -15px;
  }
  // transition is only when going to hover, otherwise the background
  // behind the gradient (there for IE<=9 fallback) gets mismatched

  // Focus state for keyboard and accessibility
  &:focus {
    @include tab-focus();
  }

  // Active state
  &.active,
  &:active {
    @include transition(background-position .1s linear);
    background-image: none;
    $shadow: inset 0 2px 4px rgba(0,0,0,.45), 0 1px 2px rgba(0,0,0,.05);
    @include box-shadow($shadow);
    background-color: darken($white, 10%);
    color: rgba(0,0,0,.5);
    outline: 0;
  }

  // Disabled state
  &.disabled,
  &[disabled] {
    cursor: default;
    background-image: none;
    background-color: darken($white, 10%);
    @include opacity(65);
    @include box-shadow(none);
    &:hover {
      @include transition(background-position .1s linear);
      color: $grayDarker;
      text-decoration: none;
      background-color: none;
      background-position: none;
    }
  }
}


// ==|== media queries ======================================================
//   EXAMPLE Media Query for Responsive Design.
//  This example overrides the primary ('mobile first') styles
//   Modify as content requires.
//   ========================================================================== */

@media only screen and (min-width: 35em) {
  // Style adjustments for viewports that meet the condition */
}
